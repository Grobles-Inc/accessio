/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as AuthenticatedRouteRouteImport } from './routes/_authenticated/route'
import { Route as publicIndexRouteImport } from './routes/(public)/index'
import { Route as errors503RouteImport } from './routes/(errors)/503'
import { Route as errors500RouteImport } from './routes/(errors)/500'
import { Route as errors404RouteImport } from './routes/(errors)/404'
import { Route as errors403RouteImport } from './routes/(errors)/403'
import { Route as errors401RouteImport } from './routes/(errors)/401'
import { Route as authSignUpRouteImport } from './routes/(auth)/sign-up'
import { Route as authSignIn2RouteImport } from './routes/(auth)/sign-in-2'
import { Route as authSignInRouteImport } from './routes/(auth)/sign-in'
import { Route as authRegisterRouteImport } from './routes/(auth)/register'
import { Route as authOtpRouteImport } from './routes/(auth)/otp'
import { Route as authForgotPasswordRouteImport } from './routes/(auth)/forgot-password'
import { Route as AuthenticatedSettingsIndexRouteImport } from './routes/_authenticated/settings/index'
import { Route as AuthenticatedReferidosIndexRouteImport } from './routes/_authenticated/referidos/index'
import { Route as AuthenticatedRecargasIndexRouteImport } from './routes/_authenticated/recargas/index'
import { Route as AuthenticatedHelpCenterIndexRouteImport } from './routes/_authenticated/help-center/index'
import { Route as AuthenticatedDashboardIndexRouteImport } from './routes/_authenticated/dashboard/index'
import { Route as AuthenticatedComprasIndexRouteImport } from './routes/_authenticated/compras/index'
import { Route as publicCategoriaNameRouteImport } from './routes/(public)/categoria/$name'
import { Route as AuthenticatedProveedorProductosIndexRouteImport } from './routes/_authenticated/proveedor/productos/index'
import { Route as AuthenticatedProveedorPedidosIndexRouteImport } from './routes/_authenticated/proveedor/pedidos/index'
import { Route as AuthenticatedProveedorBilleteraIndexRouteImport } from './routes/_authenticated/proveedor/billetera/index'
import { Route as AuthenticatedAdminUsersIndexRouteImport } from './routes/_authenticated/admin/users/index'
import { Route as AuthenticatedAdminTasksIndexRouteImport } from './routes/_authenticated/admin/tasks/index'
import { Route as AuthenticatedAdminSettingsIndexRouteImport } from './routes/_authenticated/admin/settings/index'
import { Route as AuthenticatedAdminRetirosIndexRouteImport } from './routes/_authenticated/admin/retiros/index'
import { Route as AuthenticatedAdminReportesGlobalesIndexRouteImport } from './routes/_authenticated/admin/reportes-globales/index'
import { Route as AuthenticatedAdminRecargasIndexRouteImport } from './routes/_authenticated/admin/recargas/index'
import { Route as AuthenticatedAdminProductosIndexRouteImport } from './routes/_authenticated/admin/productos/index'
import { Route as AuthenticatedAdminMiBilleteraIndexRouteImport } from './routes/_authenticated/admin/mi-billetera/index'
import { Route as AuthenticatedAdminComprasIndexRouteImport } from './routes/_authenticated/admin/compras/index'
import { Route as AuthenticatedAdminChatsIndexRouteImport } from './routes/_authenticated/admin/chats/index'
import { Route as AuthenticatedAdminCategoriesIndexRouteImport } from './routes/_authenticated/admin/categories/index'
import { Route as AuthenticatedAdminBilleterasIndexRouteImport } from './routes/_authenticated/admin/billeteras/index'
import { Route as AuthenticatedAdminAppsIndexRouteImport } from './routes/_authenticated/admin/apps/index'

const AuthenticatedRouteRoute = AuthenticatedRouteRouteImport.update({
  id: '/_authenticated',
  getParentRoute: () => rootRouteImport,
} as any)
const publicIndexRoute = publicIndexRouteImport.update({
  id: '/(public)/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const errors503Route = errors503RouteImport.update({
  id: '/(errors)/503',
  path: '/503',
  getParentRoute: () => rootRouteImport,
} as any)
const errors500Route = errors500RouteImport.update({
  id: '/(errors)/500',
  path: '/500',
  getParentRoute: () => rootRouteImport,
} as any)
const errors404Route = errors404RouteImport.update({
  id: '/(errors)/404',
  path: '/404',
  getParentRoute: () => rootRouteImport,
} as any)
const errors403Route = errors403RouteImport.update({
  id: '/(errors)/403',
  path: '/403',
  getParentRoute: () => rootRouteImport,
} as any)
const errors401Route = errors401RouteImport.update({
  id: '/(errors)/401',
  path: '/401',
  getParentRoute: () => rootRouteImport,
} as any)
const authSignUpRoute = authSignUpRouteImport.update({
  id: '/(auth)/sign-up',
  path: '/sign-up',
  getParentRoute: () => rootRouteImport,
} as any)
const authSignIn2Route = authSignIn2RouteImport.update({
  id: '/(auth)/sign-in-2',
  path: '/sign-in-2',
  getParentRoute: () => rootRouteImport,
} as any)
const authSignInRoute = authSignInRouteImport.update({
  id: '/(auth)/sign-in',
  path: '/sign-in',
  getParentRoute: () => rootRouteImport,
} as any)
const authRegisterRoute = authRegisterRouteImport.update({
  id: '/(auth)/register',
  path: '/register',
  getParentRoute: () => rootRouteImport,
} as any)
const authOtpRoute = authOtpRouteImport.update({
  id: '/(auth)/otp',
  path: '/otp',
  getParentRoute: () => rootRouteImport,
} as any)
const authForgotPasswordRoute = authForgotPasswordRouteImport.update({
  id: '/(auth)/forgot-password',
  path: '/forgot-password',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthenticatedSettingsIndexRoute =
  AuthenticatedSettingsIndexRouteImport.update({
    id: '/settings/',
    path: '/settings/',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)
const AuthenticatedReferidosIndexRoute =
  AuthenticatedReferidosIndexRouteImport.update({
    id: '/referidos/',
    path: '/referidos/',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)
const AuthenticatedRecargasIndexRoute =
  AuthenticatedRecargasIndexRouteImport.update({
    id: '/recargas/',
    path: '/recargas/',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)
const AuthenticatedHelpCenterIndexRoute =
  AuthenticatedHelpCenterIndexRouteImport.update({
    id: '/help-center/',
    path: '/help-center/',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)
const AuthenticatedDashboardIndexRoute =
  AuthenticatedDashboardIndexRouteImport.update({
    id: '/dashboard/',
    path: '/dashboard/',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)
const AuthenticatedComprasIndexRoute =
  AuthenticatedComprasIndexRouteImport.update({
    id: '/compras/',
    path: '/compras/',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)
const publicCategoriaNameRoute = publicCategoriaNameRouteImport.update({
  id: '/(public)/categoria/$name',
  path: '/categoria/$name',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthenticatedProveedorProductosIndexRoute =
  AuthenticatedProveedorProductosIndexRouteImport.update({
    id: '/proveedor/productos/',
    path: '/proveedor/productos/',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)
const AuthenticatedProveedorPedidosIndexRoute =
  AuthenticatedProveedorPedidosIndexRouteImport.update({
    id: '/proveedor/pedidos/',
    path: '/proveedor/pedidos/',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)
const AuthenticatedProveedorBilleteraIndexRoute =
  AuthenticatedProveedorBilleteraIndexRouteImport.update({
    id: '/proveedor/billetera/',
    path: '/proveedor/billetera/',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)
const AuthenticatedAdminUsersIndexRoute =
  AuthenticatedAdminUsersIndexRouteImport.update({
    id: '/admin/users/',
    path: '/admin/users/',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)
const AuthenticatedAdminTasksIndexRoute =
  AuthenticatedAdminTasksIndexRouteImport.update({
    id: '/admin/tasks/',
    path: '/admin/tasks/',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)
const AuthenticatedAdminSettingsIndexRoute =
  AuthenticatedAdminSettingsIndexRouteImport.update({
    id: '/admin/settings/',
    path: '/admin/settings/',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)
const AuthenticatedAdminRetirosIndexRoute =
  AuthenticatedAdminRetirosIndexRouteImport.update({
    id: '/admin/retiros/',
    path: '/admin/retiros/',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)
const AuthenticatedAdminReportesGlobalesIndexRoute =
  AuthenticatedAdminReportesGlobalesIndexRouteImport.update({
    id: '/admin/reportes-globales/',
    path: '/admin/reportes-globales/',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)
const AuthenticatedAdminRecargasIndexRoute =
  AuthenticatedAdminRecargasIndexRouteImport.update({
    id: '/admin/recargas/',
    path: '/admin/recargas/',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)
const AuthenticatedAdminProductosIndexRoute =
  AuthenticatedAdminProductosIndexRouteImport.update({
    id: '/admin/productos/',
    path: '/admin/productos/',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)
const AuthenticatedAdminMiBilleteraIndexRoute =
  AuthenticatedAdminMiBilleteraIndexRouteImport.update({
    id: '/admin/mi-billetera/',
    path: '/admin/mi-billetera/',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)
const AuthenticatedAdminComprasIndexRoute =
  AuthenticatedAdminComprasIndexRouteImport.update({
    id: '/admin/compras/',
    path: '/admin/compras/',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)
const AuthenticatedAdminChatsIndexRoute =
  AuthenticatedAdminChatsIndexRouteImport.update({
    id: '/admin/chats/',
    path: '/admin/chats/',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)
const AuthenticatedAdminCategoriesIndexRoute =
  AuthenticatedAdminCategoriesIndexRouteImport.update({
    id: '/admin/categories/',
    path: '/admin/categories/',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)
const AuthenticatedAdminBilleterasIndexRoute =
  AuthenticatedAdminBilleterasIndexRouteImport.update({
    id: '/admin/billeteras/',
    path: '/admin/billeteras/',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)
const AuthenticatedAdminAppsIndexRoute =
  AuthenticatedAdminAppsIndexRouteImport.update({
    id: '/admin/apps/',
    path: '/admin/apps/',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)

export interface FileRoutesByFullPath {
  '': typeof AuthenticatedRouteRouteWithChildren
  '/forgot-password': typeof authForgotPasswordRoute
  '/otp': typeof authOtpRoute
  '/register': typeof authRegisterRoute
  '/sign-in': typeof authSignInRoute
  '/sign-in-2': typeof authSignIn2Route
  '/sign-up': typeof authSignUpRoute
  '/401': typeof errors401Route
  '/403': typeof errors403Route
  '/404': typeof errors404Route
  '/500': typeof errors500Route
  '/503': typeof errors503Route
  '/': typeof publicIndexRoute
  '/categoria/$name': typeof publicCategoriaNameRoute
  '/compras': typeof AuthenticatedComprasIndexRoute
  '/dashboard': typeof AuthenticatedDashboardIndexRoute
  '/help-center': typeof AuthenticatedHelpCenterIndexRoute
  '/recargas': typeof AuthenticatedRecargasIndexRoute
  '/referidos': typeof AuthenticatedReferidosIndexRoute
  '/settings': typeof AuthenticatedSettingsIndexRoute
  '/admin/apps': typeof AuthenticatedAdminAppsIndexRoute
  '/admin/billeteras': typeof AuthenticatedAdminBilleterasIndexRoute
  '/admin/categories': typeof AuthenticatedAdminCategoriesIndexRoute
  '/admin/chats': typeof AuthenticatedAdminChatsIndexRoute
  '/admin/compras': typeof AuthenticatedAdminComprasIndexRoute
  '/admin/mi-billetera': typeof AuthenticatedAdminMiBilleteraIndexRoute
  '/admin/productos': typeof AuthenticatedAdminProductosIndexRoute
  '/admin/recargas': typeof AuthenticatedAdminRecargasIndexRoute
  '/admin/reportes-globales': typeof AuthenticatedAdminReportesGlobalesIndexRoute
  '/admin/retiros': typeof AuthenticatedAdminRetirosIndexRoute
  '/admin/settings': typeof AuthenticatedAdminSettingsIndexRoute
  '/admin/tasks': typeof AuthenticatedAdminTasksIndexRoute
  '/admin/users': typeof AuthenticatedAdminUsersIndexRoute
  '/proveedor/billetera': typeof AuthenticatedProveedorBilleteraIndexRoute
  '/proveedor/pedidos': typeof AuthenticatedProveedorPedidosIndexRoute
  '/proveedor/productos': typeof AuthenticatedProveedorProductosIndexRoute
}
export interface FileRoutesByTo {
  '': typeof AuthenticatedRouteRouteWithChildren
  '/forgot-password': typeof authForgotPasswordRoute
  '/otp': typeof authOtpRoute
  '/register': typeof authRegisterRoute
  '/sign-in': typeof authSignInRoute
  '/sign-in-2': typeof authSignIn2Route
  '/sign-up': typeof authSignUpRoute
  '/401': typeof errors401Route
  '/403': typeof errors403Route
  '/404': typeof errors404Route
  '/500': typeof errors500Route
  '/503': typeof errors503Route
  '/': typeof publicIndexRoute
  '/categoria/$name': typeof publicCategoriaNameRoute
  '/compras': typeof AuthenticatedComprasIndexRoute
  '/dashboard': typeof AuthenticatedDashboardIndexRoute
  '/help-center': typeof AuthenticatedHelpCenterIndexRoute
  '/recargas': typeof AuthenticatedRecargasIndexRoute
  '/referidos': typeof AuthenticatedReferidosIndexRoute
  '/settings': typeof AuthenticatedSettingsIndexRoute
  '/admin/apps': typeof AuthenticatedAdminAppsIndexRoute
  '/admin/billeteras': typeof AuthenticatedAdminBilleterasIndexRoute
  '/admin/categories': typeof AuthenticatedAdminCategoriesIndexRoute
  '/admin/chats': typeof AuthenticatedAdminChatsIndexRoute
  '/admin/compras': typeof AuthenticatedAdminComprasIndexRoute
  '/admin/mi-billetera': typeof AuthenticatedAdminMiBilleteraIndexRoute
  '/admin/productos': typeof AuthenticatedAdminProductosIndexRoute
  '/admin/recargas': typeof AuthenticatedAdminRecargasIndexRoute
  '/admin/reportes-globales': typeof AuthenticatedAdminReportesGlobalesIndexRoute
  '/admin/retiros': typeof AuthenticatedAdminRetirosIndexRoute
  '/admin/settings': typeof AuthenticatedAdminSettingsIndexRoute
  '/admin/tasks': typeof AuthenticatedAdminTasksIndexRoute
  '/admin/users': typeof AuthenticatedAdminUsersIndexRoute
  '/proveedor/billetera': typeof AuthenticatedProveedorBilleteraIndexRoute
  '/proveedor/pedidos': typeof AuthenticatedProveedorPedidosIndexRoute
  '/proveedor/productos': typeof AuthenticatedProveedorProductosIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/_authenticated': typeof AuthenticatedRouteRouteWithChildren
  '/(auth)/forgot-password': typeof authForgotPasswordRoute
  '/(auth)/otp': typeof authOtpRoute
  '/(auth)/register': typeof authRegisterRoute
  '/(auth)/sign-in': typeof authSignInRoute
  '/(auth)/sign-in-2': typeof authSignIn2Route
  '/(auth)/sign-up': typeof authSignUpRoute
  '/(errors)/401': typeof errors401Route
  '/(errors)/403': typeof errors403Route
  '/(errors)/404': typeof errors404Route
  '/(errors)/500': typeof errors500Route
  '/(errors)/503': typeof errors503Route
  '/(public)/': typeof publicIndexRoute
  '/(public)/categoria/$name': typeof publicCategoriaNameRoute
  '/_authenticated/compras/': typeof AuthenticatedComprasIndexRoute
  '/_authenticated/dashboard/': typeof AuthenticatedDashboardIndexRoute
  '/_authenticated/help-center/': typeof AuthenticatedHelpCenterIndexRoute
  '/_authenticated/recargas/': typeof AuthenticatedRecargasIndexRoute
  '/_authenticated/referidos/': typeof AuthenticatedReferidosIndexRoute
  '/_authenticated/settings/': typeof AuthenticatedSettingsIndexRoute
  '/_authenticated/admin/apps/': typeof AuthenticatedAdminAppsIndexRoute
  '/_authenticated/admin/billeteras/': typeof AuthenticatedAdminBilleterasIndexRoute
  '/_authenticated/admin/categories/': typeof AuthenticatedAdminCategoriesIndexRoute
  '/_authenticated/admin/chats/': typeof AuthenticatedAdminChatsIndexRoute
  '/_authenticated/admin/compras/': typeof AuthenticatedAdminComprasIndexRoute
  '/_authenticated/admin/mi-billetera/': typeof AuthenticatedAdminMiBilleteraIndexRoute
  '/_authenticated/admin/productos/': typeof AuthenticatedAdminProductosIndexRoute
  '/_authenticated/admin/recargas/': typeof AuthenticatedAdminRecargasIndexRoute
  '/_authenticated/admin/reportes-globales/': typeof AuthenticatedAdminReportesGlobalesIndexRoute
  '/_authenticated/admin/retiros/': typeof AuthenticatedAdminRetirosIndexRoute
  '/_authenticated/admin/settings/': typeof AuthenticatedAdminSettingsIndexRoute
  '/_authenticated/admin/tasks/': typeof AuthenticatedAdminTasksIndexRoute
  '/_authenticated/admin/users/': typeof AuthenticatedAdminUsersIndexRoute
  '/_authenticated/proveedor/billetera/': typeof AuthenticatedProveedorBilleteraIndexRoute
  '/_authenticated/proveedor/pedidos/': typeof AuthenticatedProveedorPedidosIndexRoute
  '/_authenticated/proveedor/productos/': typeof AuthenticatedProveedorProductosIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | ''
    | '/forgot-password'
    | '/otp'
    | '/register'
    | '/sign-in'
    | '/sign-in-2'
    | '/sign-up'
    | '/401'
    | '/403'
    | '/404'
    | '/500'
    | '/503'
    | '/'
    | '/categoria/$name'
    | '/compras'
    | '/dashboard'
    | '/help-center'
    | '/recargas'
    | '/referidos'
    | '/settings'
    | '/admin/apps'
    | '/admin/billeteras'
    | '/admin/categories'
    | '/admin/chats'
    | '/admin/compras'
    | '/admin/mi-billetera'
    | '/admin/productos'
    | '/admin/recargas'
    | '/admin/reportes-globales'
    | '/admin/retiros'
    | '/admin/settings'
    | '/admin/tasks'
    | '/admin/users'
    | '/proveedor/billetera'
    | '/proveedor/pedidos'
    | '/proveedor/productos'
  fileRoutesByTo: FileRoutesByTo
  to:
    | ''
    | '/forgot-password'
    | '/otp'
    | '/register'
    | '/sign-in'
    | '/sign-in-2'
    | '/sign-up'
    | '/401'
    | '/403'
    | '/404'
    | '/500'
    | '/503'
    | '/'
    | '/categoria/$name'
    | '/compras'
    | '/dashboard'
    | '/help-center'
    | '/recargas'
    | '/referidos'
    | '/settings'
    | '/admin/apps'
    | '/admin/billeteras'
    | '/admin/categories'
    | '/admin/chats'
    | '/admin/compras'
    | '/admin/mi-billetera'
    | '/admin/productos'
    | '/admin/recargas'
    | '/admin/reportes-globales'
    | '/admin/retiros'
    | '/admin/settings'
    | '/admin/tasks'
    | '/admin/users'
    | '/proveedor/billetera'
    | '/proveedor/pedidos'
    | '/proveedor/productos'
  id:
    | '__root__'
    | '/_authenticated'
    | '/(auth)/forgot-password'
    | '/(auth)/otp'
    | '/(auth)/register'
    | '/(auth)/sign-in'
    | '/(auth)/sign-in-2'
    | '/(auth)/sign-up'
    | '/(errors)/401'
    | '/(errors)/403'
    | '/(errors)/404'
    | '/(errors)/500'
    | '/(errors)/503'
    | '/(public)/'
    | '/(public)/categoria/$name'
    | '/_authenticated/compras/'
    | '/_authenticated/dashboard/'
    | '/_authenticated/help-center/'
    | '/_authenticated/recargas/'
    | '/_authenticated/referidos/'
    | '/_authenticated/settings/'
    | '/_authenticated/admin/apps/'
    | '/_authenticated/admin/billeteras/'
    | '/_authenticated/admin/categories/'
    | '/_authenticated/admin/chats/'
    | '/_authenticated/admin/compras/'
    | '/_authenticated/admin/mi-billetera/'
    | '/_authenticated/admin/productos/'
    | '/_authenticated/admin/recargas/'
    | '/_authenticated/admin/reportes-globales/'
    | '/_authenticated/admin/retiros/'
    | '/_authenticated/admin/settings/'
    | '/_authenticated/admin/tasks/'
    | '/_authenticated/admin/users/'
    | '/_authenticated/proveedor/billetera/'
    | '/_authenticated/proveedor/pedidos/'
    | '/_authenticated/proveedor/productos/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  AuthenticatedRouteRoute: typeof AuthenticatedRouteRouteWithChildren
  authForgotPasswordRoute: typeof authForgotPasswordRoute
  authOtpRoute: typeof authOtpRoute
  authRegisterRoute: typeof authRegisterRoute
  authSignInRoute: typeof authSignInRoute
  authSignIn2Route: typeof authSignIn2Route
  authSignUpRoute: typeof authSignUpRoute
  errors401Route: typeof errors401Route
  errors403Route: typeof errors403Route
  errors404Route: typeof errors404Route
  errors500Route: typeof errors500Route
  errors503Route: typeof errors503Route
  publicIndexRoute: typeof publicIndexRoute
  publicCategoriaNameRoute: typeof publicCategoriaNameRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_authenticated': {
      id: '/_authenticated'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthenticatedRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(public)/': {
      id: '/(public)/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof publicIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(errors)/503': {
      id: '/(errors)/503'
      path: '/503'
      fullPath: '/503'
      preLoaderRoute: typeof errors503RouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(errors)/500': {
      id: '/(errors)/500'
      path: '/500'
      fullPath: '/500'
      preLoaderRoute: typeof errors500RouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(errors)/404': {
      id: '/(errors)/404'
      path: '/404'
      fullPath: '/404'
      preLoaderRoute: typeof errors404RouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(errors)/403': {
      id: '/(errors)/403'
      path: '/403'
      fullPath: '/403'
      preLoaderRoute: typeof errors403RouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(errors)/401': {
      id: '/(errors)/401'
      path: '/401'
      fullPath: '/401'
      preLoaderRoute: typeof errors401RouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(auth)/sign-up': {
      id: '/(auth)/sign-up'
      path: '/sign-up'
      fullPath: '/sign-up'
      preLoaderRoute: typeof authSignUpRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(auth)/sign-in-2': {
      id: '/(auth)/sign-in-2'
      path: '/sign-in-2'
      fullPath: '/sign-in-2'
      preLoaderRoute: typeof authSignIn2RouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(auth)/sign-in': {
      id: '/(auth)/sign-in'
      path: '/sign-in'
      fullPath: '/sign-in'
      preLoaderRoute: typeof authSignInRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(auth)/register': {
      id: '/(auth)/register'
      path: '/register'
      fullPath: '/register'
      preLoaderRoute: typeof authRegisterRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(auth)/otp': {
      id: '/(auth)/otp'
      path: '/otp'
      fullPath: '/otp'
      preLoaderRoute: typeof authOtpRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(auth)/forgot-password': {
      id: '/(auth)/forgot-password'
      path: '/forgot-password'
      fullPath: '/forgot-password'
      preLoaderRoute: typeof authForgotPasswordRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_authenticated/settings/': {
      id: '/_authenticated/settings/'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof AuthenticatedSettingsIndexRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/referidos/': {
      id: '/_authenticated/referidos/'
      path: '/referidos'
      fullPath: '/referidos'
      preLoaderRoute: typeof AuthenticatedReferidosIndexRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/recargas/': {
      id: '/_authenticated/recargas/'
      path: '/recargas'
      fullPath: '/recargas'
      preLoaderRoute: typeof AuthenticatedRecargasIndexRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/help-center/': {
      id: '/_authenticated/help-center/'
      path: '/help-center'
      fullPath: '/help-center'
      preLoaderRoute: typeof AuthenticatedHelpCenterIndexRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/dashboard/': {
      id: '/_authenticated/dashboard/'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof AuthenticatedDashboardIndexRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/compras/': {
      id: '/_authenticated/compras/'
      path: '/compras'
      fullPath: '/compras'
      preLoaderRoute: typeof AuthenticatedComprasIndexRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/(public)/categoria/$name': {
      id: '/(public)/categoria/$name'
      path: '/categoria/$name'
      fullPath: '/categoria/$name'
      preLoaderRoute: typeof publicCategoriaNameRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_authenticated/proveedor/productos/': {
      id: '/_authenticated/proveedor/productos/'
      path: '/proveedor/productos'
      fullPath: '/proveedor/productos'
      preLoaderRoute: typeof AuthenticatedProveedorProductosIndexRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/proveedor/pedidos/': {
      id: '/_authenticated/proveedor/pedidos/'
      path: '/proveedor/pedidos'
      fullPath: '/proveedor/pedidos'
      preLoaderRoute: typeof AuthenticatedProveedorPedidosIndexRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/proveedor/billetera/': {
      id: '/_authenticated/proveedor/billetera/'
      path: '/proveedor/billetera'
      fullPath: '/proveedor/billetera'
      preLoaderRoute: typeof AuthenticatedProveedorBilleteraIndexRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/admin/users/': {
      id: '/_authenticated/admin/users/'
      path: '/admin/users'
      fullPath: '/admin/users'
      preLoaderRoute: typeof AuthenticatedAdminUsersIndexRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/admin/tasks/': {
      id: '/_authenticated/admin/tasks/'
      path: '/admin/tasks'
      fullPath: '/admin/tasks'
      preLoaderRoute: typeof AuthenticatedAdminTasksIndexRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/admin/settings/': {
      id: '/_authenticated/admin/settings/'
      path: '/admin/settings'
      fullPath: '/admin/settings'
      preLoaderRoute: typeof AuthenticatedAdminSettingsIndexRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/admin/retiros/': {
      id: '/_authenticated/admin/retiros/'
      path: '/admin/retiros'
      fullPath: '/admin/retiros'
      preLoaderRoute: typeof AuthenticatedAdminRetirosIndexRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/admin/reportes-globales/': {
      id: '/_authenticated/admin/reportes-globales/'
      path: '/admin/reportes-globales'
      fullPath: '/admin/reportes-globales'
      preLoaderRoute: typeof AuthenticatedAdminReportesGlobalesIndexRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/admin/recargas/': {
      id: '/_authenticated/admin/recargas/'
      path: '/admin/recargas'
      fullPath: '/admin/recargas'
      preLoaderRoute: typeof AuthenticatedAdminRecargasIndexRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/admin/productos/': {
      id: '/_authenticated/admin/productos/'
      path: '/admin/productos'
      fullPath: '/admin/productos'
      preLoaderRoute: typeof AuthenticatedAdminProductosIndexRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/admin/mi-billetera/': {
      id: '/_authenticated/admin/mi-billetera/'
      path: '/admin/mi-billetera'
      fullPath: '/admin/mi-billetera'
      preLoaderRoute: typeof AuthenticatedAdminMiBilleteraIndexRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/admin/compras/': {
      id: '/_authenticated/admin/compras/'
      path: '/admin/compras'
      fullPath: '/admin/compras'
      preLoaderRoute: typeof AuthenticatedAdminComprasIndexRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/admin/chats/': {
      id: '/_authenticated/admin/chats/'
      path: '/admin/chats'
      fullPath: '/admin/chats'
      preLoaderRoute: typeof AuthenticatedAdminChatsIndexRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/admin/categories/': {
      id: '/_authenticated/admin/categories/'
      path: '/admin/categories'
      fullPath: '/admin/categories'
      preLoaderRoute: typeof AuthenticatedAdminCategoriesIndexRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/admin/billeteras/': {
      id: '/_authenticated/admin/billeteras/'
      path: '/admin/billeteras'
      fullPath: '/admin/billeteras'
      preLoaderRoute: typeof AuthenticatedAdminBilleterasIndexRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/admin/apps/': {
      id: '/_authenticated/admin/apps/'
      path: '/admin/apps'
      fullPath: '/admin/apps'
      preLoaderRoute: typeof AuthenticatedAdminAppsIndexRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
  }
}

interface AuthenticatedRouteRouteChildren {
  AuthenticatedComprasIndexRoute: typeof AuthenticatedComprasIndexRoute
  AuthenticatedDashboardIndexRoute: typeof AuthenticatedDashboardIndexRoute
  AuthenticatedHelpCenterIndexRoute: typeof AuthenticatedHelpCenterIndexRoute
  AuthenticatedRecargasIndexRoute: typeof AuthenticatedRecargasIndexRoute
  AuthenticatedReferidosIndexRoute: typeof AuthenticatedReferidosIndexRoute
  AuthenticatedSettingsIndexRoute: typeof AuthenticatedSettingsIndexRoute
  AuthenticatedAdminAppsIndexRoute: typeof AuthenticatedAdminAppsIndexRoute
  AuthenticatedAdminBilleterasIndexRoute: typeof AuthenticatedAdminBilleterasIndexRoute
  AuthenticatedAdminCategoriesIndexRoute: typeof AuthenticatedAdminCategoriesIndexRoute
  AuthenticatedAdminChatsIndexRoute: typeof AuthenticatedAdminChatsIndexRoute
  AuthenticatedAdminComprasIndexRoute: typeof AuthenticatedAdminComprasIndexRoute
  AuthenticatedAdminMiBilleteraIndexRoute: typeof AuthenticatedAdminMiBilleteraIndexRoute
  AuthenticatedAdminProductosIndexRoute: typeof AuthenticatedAdminProductosIndexRoute
  AuthenticatedAdminRecargasIndexRoute: typeof AuthenticatedAdminRecargasIndexRoute
  AuthenticatedAdminReportesGlobalesIndexRoute: typeof AuthenticatedAdminReportesGlobalesIndexRoute
  AuthenticatedAdminRetirosIndexRoute: typeof AuthenticatedAdminRetirosIndexRoute
  AuthenticatedAdminSettingsIndexRoute: typeof AuthenticatedAdminSettingsIndexRoute
  AuthenticatedAdminTasksIndexRoute: typeof AuthenticatedAdminTasksIndexRoute
  AuthenticatedAdminUsersIndexRoute: typeof AuthenticatedAdminUsersIndexRoute
  AuthenticatedProveedorBilleteraIndexRoute: typeof AuthenticatedProveedorBilleteraIndexRoute
  AuthenticatedProveedorPedidosIndexRoute: typeof AuthenticatedProveedorPedidosIndexRoute
  AuthenticatedProveedorProductosIndexRoute: typeof AuthenticatedProveedorProductosIndexRoute
}

const AuthenticatedRouteRouteChildren: AuthenticatedRouteRouteChildren = {
  AuthenticatedComprasIndexRoute: AuthenticatedComprasIndexRoute,
  AuthenticatedDashboardIndexRoute: AuthenticatedDashboardIndexRoute,
  AuthenticatedHelpCenterIndexRoute: AuthenticatedHelpCenterIndexRoute,
  AuthenticatedRecargasIndexRoute: AuthenticatedRecargasIndexRoute,
  AuthenticatedReferidosIndexRoute: AuthenticatedReferidosIndexRoute,
  AuthenticatedSettingsIndexRoute: AuthenticatedSettingsIndexRoute,
  AuthenticatedAdminAppsIndexRoute: AuthenticatedAdminAppsIndexRoute,
  AuthenticatedAdminBilleterasIndexRoute:
    AuthenticatedAdminBilleterasIndexRoute,
  AuthenticatedAdminCategoriesIndexRoute:
    AuthenticatedAdminCategoriesIndexRoute,
  AuthenticatedAdminChatsIndexRoute: AuthenticatedAdminChatsIndexRoute,
  AuthenticatedAdminComprasIndexRoute: AuthenticatedAdminComprasIndexRoute,
  AuthenticatedAdminMiBilleteraIndexRoute:
    AuthenticatedAdminMiBilleteraIndexRoute,
  AuthenticatedAdminProductosIndexRoute: AuthenticatedAdminProductosIndexRoute,
  AuthenticatedAdminRecargasIndexRoute: AuthenticatedAdminRecargasIndexRoute,
  AuthenticatedAdminReportesGlobalesIndexRoute:
    AuthenticatedAdminReportesGlobalesIndexRoute,
  AuthenticatedAdminRetirosIndexRoute: AuthenticatedAdminRetirosIndexRoute,
  AuthenticatedAdminSettingsIndexRoute: AuthenticatedAdminSettingsIndexRoute,
  AuthenticatedAdminTasksIndexRoute: AuthenticatedAdminTasksIndexRoute,
  AuthenticatedAdminUsersIndexRoute: AuthenticatedAdminUsersIndexRoute,
  AuthenticatedProveedorBilleteraIndexRoute:
    AuthenticatedProveedorBilleteraIndexRoute,
  AuthenticatedProveedorPedidosIndexRoute:
    AuthenticatedProveedorPedidosIndexRoute,
  AuthenticatedProveedorProductosIndexRoute:
    AuthenticatedProveedorProductosIndexRoute,
}

const AuthenticatedRouteRouteWithChildren =
  AuthenticatedRouteRoute._addFileChildren(AuthenticatedRouteRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  AuthenticatedRouteRoute: AuthenticatedRouteRouteWithChildren,
  authForgotPasswordRoute: authForgotPasswordRoute,
  authOtpRoute: authOtpRoute,
  authRegisterRoute: authRegisterRoute,
  authSignInRoute: authSignInRoute,
  authSignIn2Route: authSignIn2Route,
  authSignUpRoute: authSignUpRoute,
  errors401Route: errors401Route,
  errors403Route: errors403Route,
  errors404Route: errors404Route,
  errors500Route: errors500Route,
  errors503Route: errors503Route,
  publicIndexRoute: publicIndexRoute,
  publicCategoriaNameRoute: publicCategoriaNameRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
